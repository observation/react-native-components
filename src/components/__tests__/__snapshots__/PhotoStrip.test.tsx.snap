// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PhotoStrip Rendering Click on item to open the lightbox 1`] = `
<View>
  <Modal
    animationType="fade"
    hardwareAccelerated={true}
    onRequestClose={[Function]}
    supportedOrientations={
      [
        "portrait",
      ]
    }
    transparent={false}
    visible={true}
  >
    <View
      style={
        [
          {
            "backgroundColor": "#000",
            "flex": 1,
          },
          {
            "backgroundColor": "#000",
            "opacity": 1,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          {
            "position": "absolute",
            "top": 0,
            "transform": [
              {
                "translateX": 0,
              },
              {
                "translateY": 0,
              },
            ],
            "width": "100%",
            "zIndex": 1,
          }
        }
      >
        <RCTSafeAreaView
          style={
            {
              "backgroundColor": "#00000077",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            style={
              {
                "alignContent": "space-between",
                "flex": 1,
                "flexDirection": "row",
                "padding": 16,
              }
            }
          >
            <View
              style={
                {
                  "flex": 1,
                }
              }
            />
            <View
              style={
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignSelf": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignSelf": "center",
                      "aspectRatio": 1,
                      "backgroundColor": "#939393",
                      "borderRadius": 4,
                      "margin": 4,
                      "overflow": "hidden",
                      "width": 8,
                    }
                  }
                />
                <View
                  style={
                    {
                      "alignSelf": "center",
                      "aspectRatio": 1,
                      "backgroundColor": "#939393",
                      "borderRadius": 4,
                      "margin": 4,
                      "overflow": "hidden",
                      "width": 8,
                    }
                  }
                />
                <View
                  style={
                    [
                      {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#939393",
                        "borderRadius": 4,
                        "margin": 4,
                        "overflow": "hidden",
                        "width": 8,
                      },
                      {
                        "backgroundColor": "#FFFFFF",
                      },
                    ]
                  }
                />
                <View
                  style={
                    {
                      "alignSelf": "center",
                      "aspectRatio": 1,
                      "backgroundColor": "#939393",
                      "borderRadius": 4,
                      "margin": 4,
                      "overflow": "hidden",
                      "width": 8,
                    }
                  }
                />
                <View
                  style={
                    {
                      "alignSelf": "center",
                      "aspectRatio": 1,
                      "backgroundColor": "#939393",
                      "borderRadius": 4,
                      "margin": 4,
                      "overflow": "hidden",
                      "width": 8,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 16,
                    "left": 16,
                    "right": 16,
                    "top": 16,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "alignSelf": "flex-end",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Icon
                  color="rgba(255, 255, 255, 0.5)"
                  name="xmark"
                  size={24}
                  testID="close-lightbox"
                  type="light"
                />
              </View>
            </View>
          </View>
        </RCTSafeAreaView>
      </View>
      <RCTScrollView
        data={
          [
            {
              "uri": "https://path.to/image0.jpg",
            },
            {
              "uri": "https://path.to/image1.jpg",
            },
            {
              "uri": "https://path.to/image2.jpg",
            },
            {
              "uri": "https://path.to/image3.jpg",
            },
            {
              "uri": "https://path.to/image4.jpg",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        getItemLayout={[Function]}
        horizontal={true}
        initialNumToRender={1}
        initialScrollIndex={2}
        keyExtractor={[Function]}
        maxToRenderPerBatch={1}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        pagingEnabled={true}
        renderItem={[Function]}
        scrollEventThrottle={0.0001}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        stickyHeaderIndices={[]}
        windowSize={2}
      >
        <View>
          <View
            style={
              {
                "width": 1500,
              }
            }
          />
          <View
            onFocusCapture={[Function]}
            style={
              [
                {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View>
              <RCTScrollView
                contentContainerStyle={
                  {
                    "height": 1334,
                  }
                }
                maximumZoomScale={1}
                onScrollEndDrag={[Function]}
                pinchGestureEnabled={true}
                scrollEnabled={false}
                scrollEventThrottle={1}
                showsHorizontalScrollIndicator={false}
                showsVerticalScrollIndicator={false}
                style={
                  {
                    "height": 1334,
                    "width": 750,
                  }
                }
              >
                <View>
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "height": 1334,
                        "justifyContent": "center",
                        "width": 750,
                      }
                    }
                  >
                    <ActivityIndicator
                      color="#FFF"
                      size="small"
                    />
                  </View>
                  <Image
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onLoad={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    source={
                      {
                        "uri": "https://path.to/image2.jpg",
                      }
                    }
                    style={
                      {
                        "height": 0,
                        "opacity": 1,
                        "width": 0,
                      }
                    }
                  />
                </View>
              </RCTScrollView>
            </View>
          </View>
          <View
            style={
              {
                "width": 1500,
              }
            }
          />
        </View>
      </RCTScrollView>
      <View
        collapsable={false}
        style={
          {
            "bottom": 0,
            "position": "absolute",
            "transform": [
              {
                "translateX": 0,
              },
              {
                "translateY": 0,
              },
            ],
            "width": "100%",
            "zIndex": 1,
          }
        }
      >
        <RCTSafeAreaView
          style={
            {
              "backgroundColor": "#00000077",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
            }
          }
        >
          <View
            style={
              {
                "paddingHorizontal": 16,
                "paddingVertical": 8,
              }
            }
          />
        </RCTSafeAreaView>
      </View>
    </View>
  </Modal>
  <RCTScrollView
    contentContainerStyle={
      {
        "alignItems": "stretch",
        "flexGrow": 1,
      }
    }
    data={
      [
        "https://path.to/image0.jpg",
        "https://path.to/image1.jpg",
        "https://path.to/image2.jpg",
        "https://path.to/image3.jpg",
        "https://path.to/image4.jpg",
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={[]}
    style={
      {
        "height": 94,
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image0.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 16,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image1.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image2.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image3.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image4.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 16,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`PhotoStrip Rendering Render 3 items 1`] = `
<View>
  <RCTScrollView
    contentContainerStyle={
      {
        "alignItems": "stretch",
        "flexGrow": 1,
      }
    }
    data={
      [
        "https://path.to/image0.jpg",
        "https://path.to/image1.jpg",
        "https://path.to/image2.jpg",
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={[]}
    style={
      {
        "height": 94,
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image0.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 16,
                "marginRight": 4,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image1.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 4,
                "marginRight": 4,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image2.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 4,
                "marginRight": 16,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`PhotoStrip Rendering Render 5 items 1`] = `
<View>
  <RCTScrollView
    contentContainerStyle={
      {
        "alignItems": "stretch",
        "flexGrow": 1,
      }
    }
    data={
      [
        "https://path.to/image0.jpg",
        "https://path.to/image1.jpg",
        "https://path.to/image2.jpg",
        "https://path.to/image3.jpg",
        "https://path.to/image4.jpg",
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={[]}
    style={
      {
        "height": 94,
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image0.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 16,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image1.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image2.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image3.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image4.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 16,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`PhotoStrip Rendering Render species name, date and user in footer 1`] = `
<View>
  <Modal
    animationType="fade"
    hardwareAccelerated={true}
    onRequestClose={[Function]}
    supportedOrientations={
      [
        "portrait",
      ]
    }
    transparent={false}
    visible={true}
  >
    <View
      style={
        [
          {
            "backgroundColor": "#000",
            "flex": 1,
          },
          {
            "backgroundColor": "#000",
            "opacity": 1,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          {
            "position": "absolute",
            "top": 0,
            "transform": [
              {
                "translateX": 0,
              },
              {
                "translateY": 0,
              },
            ],
            "width": "100%",
            "zIndex": 1,
          }
        }
      >
        <RCTSafeAreaView
          style={
            {
              "backgroundColor": "#00000077",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            style={
              {
                "alignContent": "space-between",
                "flex": 1,
                "flexDirection": "row",
                "padding": 16,
              }
            }
          >
            <View
              style={
                {
                  "flex": 1,
                }
              }
            />
            <View
              style={
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  {
                    "alignSelf": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignSelf": "center",
                      "aspectRatio": 1,
                      "backgroundColor": "#939393",
                      "borderRadius": 4,
                      "margin": 4,
                      "overflow": "hidden",
                      "width": 8,
                    }
                  }
                />
                <View
                  style={
                    {
                      "alignSelf": "center",
                      "aspectRatio": 1,
                      "backgroundColor": "#939393",
                      "borderRadius": 4,
                      "margin": 4,
                      "overflow": "hidden",
                      "width": 8,
                    }
                  }
                />
                <View
                  style={
                    [
                      {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#939393",
                        "borderRadius": 4,
                        "margin": 4,
                        "overflow": "hidden",
                        "width": 8,
                      },
                      {
                        "backgroundColor": "#FFFFFF",
                      },
                    ]
                  }
                />
                <View
                  style={
                    {
                      "alignSelf": "center",
                      "aspectRatio": 1,
                      "backgroundColor": "#939393",
                      "borderRadius": 4,
                      "margin": 4,
                      "overflow": "hidden",
                      "width": 8,
                    }
                  }
                />
                <View
                  style={
                    {
                      "alignSelf": "center",
                      "aspectRatio": 1,
                      "backgroundColor": "#939393",
                      "borderRadius": 4,
                      "margin": 4,
                      "overflow": "hidden",
                      "width": 8,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 16,
                    "left": 16,
                    "right": 16,
                    "top": 16,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "alignSelf": "flex-end",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Icon
                  color="rgba(255, 255, 255, 0.5)"
                  name="xmark"
                  size={24}
                  testID="close-lightbox"
                  type="light"
                />
              </View>
            </View>
          </View>
        </RCTSafeAreaView>
      </View>
      <RCTScrollView
        data={
          [
            {
              "uri": "https://path.to/image0.jpg",
            },
            {
              "uri": "https://path.to/image1.jpg",
            },
            {
              "uri": "https://path.to/image2.jpg",
            },
            {
              "uri": "https://path.to/image3.jpg",
            },
            {
              "uri": "https://path.to/image4.jpg",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        getItemLayout={[Function]}
        horizontal={true}
        initialNumToRender={1}
        initialScrollIndex={2}
        keyExtractor={[Function]}
        maxToRenderPerBatch={1}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        pagingEnabled={true}
        renderItem={[Function]}
        scrollEventThrottle={0.0001}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        stickyHeaderIndices={[]}
        windowSize={2}
      >
        <View>
          <View
            style={
              {
                "width": 1500,
              }
            }
          />
          <View
            onFocusCapture={[Function]}
            style={
              [
                {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View>
              <RCTScrollView
                contentContainerStyle={
                  {
                    "height": 1334,
                  }
                }
                maximumZoomScale={1}
                onScrollEndDrag={[Function]}
                pinchGestureEnabled={true}
                scrollEnabled={false}
                scrollEventThrottle={1}
                showsHorizontalScrollIndicator={false}
                showsVerticalScrollIndicator={false}
                style={
                  {
                    "height": 1334,
                    "width": 750,
                  }
                }
              >
                <View>
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "height": 1334,
                        "justifyContent": "center",
                        "width": 750,
                      }
                    }
                  >
                    <ActivityIndicator
                      color="#FFF"
                      size="small"
                    />
                  </View>
                  <Image
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onLoad={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    source={
                      {
                        "uri": "https://path.to/image2.jpg",
                      }
                    }
                    style={
                      {
                        "height": 0,
                        "opacity": 1,
                        "width": 0,
                      }
                    }
                  />
                </View>
              </RCTScrollView>
            </View>
          </View>
          <View
            style={
              {
                "width": 1500,
              }
            }
          />
        </View>
      </RCTScrollView>
      <View
        collapsable={false}
        style={
          {
            "bottom": 0,
            "position": "absolute",
            "transform": [
              {
                "translateX": 0,
              },
              {
                "translateY": 0,
              },
            ],
            "width": "100%",
            "zIndex": 1,
          }
        }
      >
        <RCTSafeAreaView
          style={
            {
              "backgroundColor": "#00000077",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
            }
          }
        >
          <View
            style={
              {
                "paddingHorizontal": 16,
                "paddingVertical": 8,
              }
            }
          >
            <View
              style={
                {
                  "marginVertical": 4,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "white",
                    "fontFamily": "Ubuntu",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "bold",
                    "lineHeight": 24,
                  }
                }
              >
                The name of the species
              </Text>
            </View>
            <View
              style={
                {
                  "marginVertical": 4,
                }
              }
            >
              <Text
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontFamily": "Ubuntu",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                      "lineHeight": 20,
                    },
                    undefined,
                  ]
                }
              >
                Today
              </Text>
            </View>
            <View
              style={
                {
                  "marginVertical": 4,
                }
              }
            >
              <Text>
                Joe User
              </Text>
            </View>
          </View>
        </RCTSafeAreaView>
      </View>
    </View>
  </Modal>
  <RCTScrollView
    contentContainerStyle={
      {
        "alignItems": "stretch",
        "flexGrow": 1,
      }
    }
    data={
      [
        "https://path.to/image0.jpg",
        "https://path.to/image1.jpg",
        "https://path.to/image2.jpg",
        "https://path.to/image3.jpg",
        "https://path.to/image4.jpg",
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={[]}
    style={
      {
        "height": 94,
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image0.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 16,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image1.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image2.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image3.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 2,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="touchable-opacity"
        >
          <Image
            source={
              {
                "uri": "https://path.to/image4.jpg",
              }
            }
            style={
              {
                "borderRadius": 8,
                "height": 94,
                "marginLeft": 2,
                "marginRight": 16,
                "overflow": "hidden",
                "width": 94,
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
