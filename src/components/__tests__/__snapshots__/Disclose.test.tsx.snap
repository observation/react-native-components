// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Disclose Rendering Only text 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginHorizontal": 16,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        [
          {
            "color": "#0066B1",
            "fontFamily": "Ubuntu",
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "normal",
            "lineHeight": 20,
          },
          undefined,
        ]
      }
    >
      some text
    </Text>
    <Icon
      color="#0066B1"
      name="chevron-right"
      size={18}
      type="light"
    />
  </View>
</View>
`;

exports[`Disclose Rendering Styles and callback 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginHorizontal": 16,
        },
        {
          "flex": 1,
        },
      ]
    }
  >
    <Text
      style={
        [
          {
            "color": "#0066B1",
            "fontFamily": "Ubuntu",
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "normal",
            "lineHeight": 20,
          },
          {
            "fontSize": 1,
          },
        ]
      }
    >
      some text
    </Text>
    <Icon
      color="#0066B1"
      name="chevron-right"
      size={18}
      type="light"
    />
  </View>
</View>
`;
