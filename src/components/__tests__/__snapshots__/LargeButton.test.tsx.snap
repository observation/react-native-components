// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LargeButton Rendering, disabled, primary 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#E6E6E6",
      "borderRadius": 4,
      "flex": 1,
      "height": 32,
      "justifyContent": "center",
      "margin": 16,
      "opacity": 1,
      "overflow": "hidden",
    }
  }
  testID="touchable-opacity"
>
  <View
    style={
      {
        "flexDirection": "row",
        "marginHorizontal": 16,
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#212121",
            "fontFamily": "Ubuntu",
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "bold",
            "lineHeight": 20,
            "textAlignVertical": "center",
          },
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`LargeButton Rendering, disabled, secondary 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#FFFFFF",
      "borderColor": "#E6E6E6",
      "borderRadius": 4,
      "borderWidth": 2,
      "flex": 1,
      "height": 32,
      "justifyContent": "center",
      "margin": 16,
      "opacity": 1,
      "overflow": "hidden",
    }
  }
  testID="touchable-opacity"
>
  <View
    style={
      {
        "flexDirection": "row",
        "marginHorizontal": 16,
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#212121",
            "fontFamily": "Ubuntu",
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "bold",
            "lineHeight": 20,
            "textAlignVertical": "center",
          },
          {
            "color": "#E6E6E6",
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`LargeButton Rendering, enabled, primary 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#0066B1",
      "borderRadius": 4,
      "flex": 1,
      "height": 32,
      "justifyContent": "center",
      "margin": 16,
      "opacity": 1,
      "overflow": "hidden",
    }
  }
  testID="touchable-opacity"
>
  <View
    style={
      {
        "flexDirection": "row",
        "marginHorizontal": 16,
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#212121",
            "fontFamily": "Ubuntu",
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "bold",
            "lineHeight": 20,
            "textAlignVertical": "center",
          },
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`LargeButton Rendering, enabled, secondary 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#FFFFFF",
      "borderColor": "#0066B1",
      "borderRadius": 4,
      "borderWidth": 2,
      "flex": 1,
      "height": 32,
      "justifyContent": "center",
      "margin": 16,
      "opacity": 1,
      "overflow": "hidden",
    }
  }
  testID="touchable-opacity"
>
  <View
    style={
      {
        "flexDirection": "row",
        "marginHorizontal": 16,
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#212121",
            "fontFamily": "Ubuntu",
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "bold",
            "lineHeight": 20,
            "textAlignVertical": "center",
          },
          {
            "color": "#0066B1",
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`LargeButton Rendering, primary, danger 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#EA554B",
      "borderRadius": 4,
      "flex": 1,
      "height": 32,
      "justifyContent": "center",
      "margin": 16,
      "opacity": 1,
      "overflow": "hidden",
    }
  }
  testID="touchable-opacity"
>
  <View
    style={
      {
        "flexDirection": "row",
        "marginHorizontal": 16,
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#212121",
            "fontFamily": "Ubuntu",
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "bold",
            "lineHeight": 20,
            "textAlignVertical": "center",
          },
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`LargeButton Rendering, secondary, danger 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#FFFFFF",
      "borderColor": "#EA554B",
      "borderRadius": 4,
      "borderWidth": 2,
      "flex": 1,
      "height": 32,
      "justifyContent": "center",
      "margin": 16,
      "opacity": 1,
      "overflow": "hidden",
    }
  }
  testID="touchable-opacity"
>
  <View
    style={
      {
        "flexDirection": "row",
        "marginHorizontal": 16,
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#212121",
            "fontFamily": "Ubuntu",
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "bold",
            "lineHeight": 20,
            "textAlignVertical": "center",
          },
          {
            "color": "#EA554B",
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`LargeButton Rendering, secondary, danger, disabled => defaults to primary 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#0066B1",
      "borderRadius": 4,
      "flex": 1,
      "height": 32,
      "justifyContent": "center",
      "margin": 16,
      "opacity": 1,
      "overflow": "hidden",
    }
  }
  testID="touchable-opacity"
>
  <View
    style={
      {
        "flexDirection": "row",
        "marginHorizontal": 16,
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#212121",
            "fontFamily": "Ubuntu",
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "bold",
            "lineHeight": 20,
            "textAlignVertical": "center",
          },
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;

exports[`LargeButton Rendering, with icon 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#0066B1",
      "borderRadius": 4,
      "flex": 1,
      "height": 32,
      "justifyContent": "center",
      "margin": 16,
      "opacity": 1,
      "overflow": "hidden",
    }
  }
  testID="touchable-opacity"
>
  <View
    style={
      {
        "flexDirection": "row",
        "marginHorizontal": 16,
      }
    }
  >
    <View
      style={
        {
          "justifyContent": "center",
          "paddingRight": 8,
        }
      }
    >
      <Icon
        color="#FFFFFF"
        name="circle-info"
        size={16}
        type="light"
      />
    </View>
    <Text
      style={
        [
          {
            "color": "#212121",
            "fontFamily": "Ubuntu",
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "bold",
            "lineHeight": 20,
            "textAlignVertical": "center",
          },
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      Press me
    </Text>
  </View>
</View>
`;
